// flow-typed signature: 69ca90250588e58edf55074c1a6f2c23
// flow-typed version: <<STUB>>/electron-builder_v^13.3.2/flow_v0.38.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'electron-builder'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the 
 * community by sending a pull request to: 
 * https://github.com/flowtype/flow-typed
 */

declare module 'electron-builder' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'electron-builder/out/appInfo' {
  declare module.exports: any;
}

declare module 'electron-builder/out/asarUtil' {
  declare module.exports: any;
}

declare module 'electron-builder/out/builder' {
  declare module.exports: any;
}

declare module 'electron-builder/out/cli/build-cli' {
  declare module.exports: any;
}

declare module 'electron-builder/out/cli/cliOptions' {
  declare module.exports: any;
}

declare module 'electron-builder/out/cli/create-self-signed-cert' {
  declare module.exports: any;
}

declare module 'electron-builder/out/cli/install-app-deps' {
  declare module.exports: any;
}

declare module 'electron-builder/out/cli/node-gyp-rebuild' {
  declare module.exports: any;
}

declare module 'electron-builder/out/codeSign' {
  declare module.exports: any;
}

declare module 'electron-builder/out/errorMessages' {
  declare module.exports: any;
}

declare module 'electron-builder/out/fileMatcher' {
  declare module.exports: any;
}

declare module 'electron-builder/out/index' {
  declare module.exports: any;
}

declare module 'electron-builder/out/linuxPackager' {
  declare module.exports: any;
}

declare module 'electron-builder/out/macPackager' {
  declare module.exports: any;
}

declare module 'electron-builder/out/metadata' {
  declare module.exports: any;
}

declare module 'electron-builder/out/options/linuxOptions' {
  declare module.exports: any;
}

declare module 'electron-builder/out/options/macOptions' {
  declare module.exports: any;
}

declare module 'electron-builder/out/options/winOptions' {
  declare module.exports: any;
}

declare module 'electron-builder/out/packager' {
  declare module.exports: any;
}

declare module 'electron-builder/out/packager/dirPackager' {
  declare module.exports: any;
}

declare module 'electron-builder/out/packager/mac' {
  declare module.exports: any;
}

declare module 'electron-builder/out/packagerApi' {
  declare module.exports: any;
}

declare module 'electron-builder/out/platformPackager' {
  declare module.exports: any;
}

declare module 'electron-builder/out/publish/publisher' {
  declare module.exports: any;
}

declare module 'electron-builder/out/publish/PublishManager' {
  declare module.exports: any;
}

declare module 'electron-builder/out/readInstalled' {
  declare module.exports: any;
}

declare module 'electron-builder/out/repositoryInfo' {
  declare module.exports: any;
}

declare module 'electron-builder/out/targets/appImage' {
  declare module.exports: any;
}

declare module 'electron-builder/out/targets/appx' {
  declare module.exports: any;
}

declare module 'electron-builder/out/targets/archive' {
  declare module.exports: any;
}

declare module 'electron-builder/out/targets/ArchiveTarget' {
  declare module.exports: any;
}

declare module 'electron-builder/out/targets/dmg' {
  declare module.exports: any;
}

declare module 'electron-builder/out/targets/fpm' {
  declare module.exports: any;
}

declare module 'electron-builder/out/targets/LinuxTargetHelper' {
  declare module.exports: any;
}

declare module 'electron-builder/out/targets/nsis' {
  declare module.exports: any;
}

declare module 'electron-builder/out/targets/pkg' {
  declare module.exports: any;
}

declare module 'electron-builder/out/targets/snap' {
  declare module.exports: any;
}

declare module 'electron-builder/out/targets/targetFactory' {
  declare module.exports: any;
}

declare module 'electron-builder/out/util/filter' {
  declare module.exports: any;
}

declare module 'electron-builder/out/util/readPackageJson' {
  declare module.exports: any;
}

declare module 'electron-builder/out/windowsCodeSign' {
  declare module.exports: any;
}

declare module 'electron-builder/out/winPackager' {
  declare module.exports: any;
}

declare module 'electron-builder/out/yarn' {
  declare module.exports: any;
}

// Filename aliases
declare module 'electron-builder/out/appInfo.js' {
  declare module.exports: $Exports<'electron-builder/out/appInfo'>;
}
declare module 'electron-builder/out/asarUtil.js' {
  declare module.exports: $Exports<'electron-builder/out/asarUtil'>;
}
declare module 'electron-builder/out/builder.js' {
  declare module.exports: $Exports<'electron-builder/out/builder'>;
}
declare module 'electron-builder/out/cli/build-cli.js' {
  declare module.exports: $Exports<'electron-builder/out/cli/build-cli'>;
}
declare module 'electron-builder/out/cli/cliOptions.js' {
  declare module.exports: $Exports<'electron-builder/out/cli/cliOptions'>;
}
declare module 'electron-builder/out/cli/create-self-signed-cert.js' {
  declare module.exports: $Exports<'electron-builder/out/cli/create-self-signed-cert'>;
}
declare module 'electron-builder/out/cli/install-app-deps.js' {
  declare module.exports: $Exports<'electron-builder/out/cli/install-app-deps'>;
}
declare module 'electron-builder/out/cli/node-gyp-rebuild.js' {
  declare module.exports: $Exports<'electron-builder/out/cli/node-gyp-rebuild'>;
}
declare module 'electron-builder/out/codeSign.js' {
  declare module.exports: $Exports<'electron-builder/out/codeSign'>;
}
declare module 'electron-builder/out/errorMessages.js' {
  declare module.exports: $Exports<'electron-builder/out/errorMessages'>;
}
declare module 'electron-builder/out/fileMatcher.js' {
  declare module.exports: $Exports<'electron-builder/out/fileMatcher'>;
}
declare module 'electron-builder/out/index.js' {
  declare module.exports: $Exports<'electron-builder/out/index'>;
}
declare module 'electron-builder/out/linuxPackager.js' {
  declare module.exports: $Exports<'electron-builder/out/linuxPackager'>;
}
declare module 'electron-builder/out/macPackager.js' {
  declare module.exports: $Exports<'electron-builder/out/macPackager'>;
}
declare module 'electron-builder/out/metadata.js' {
  declare module.exports: $Exports<'electron-builder/out/metadata'>;
}
declare module 'electron-builder/out/options/linuxOptions.js' {
  declare module.exports: $Exports<'electron-builder/out/options/linuxOptions'>;
}
declare module 'electron-builder/out/options/macOptions.js' {
  declare module.exports: $Exports<'electron-builder/out/options/macOptions'>;
}
declare module 'electron-builder/out/options/winOptions.js' {
  declare module.exports: $Exports<'electron-builder/out/options/winOptions'>;
}
declare module 'electron-builder/out/packager.js' {
  declare module.exports: $Exports<'electron-builder/out/packager'>;
}
declare module 'electron-builder/out/packager/dirPackager.js' {
  declare module.exports: $Exports<'electron-builder/out/packager/dirPackager'>;
}
declare module 'electron-builder/out/packager/mac.js' {
  declare module.exports: $Exports<'electron-builder/out/packager/mac'>;
}
declare module 'electron-builder/out/packagerApi.js' {
  declare module.exports: $Exports<'electron-builder/out/packagerApi'>;
}
declare module 'electron-builder/out/platformPackager.js' {
  declare module.exports: $Exports<'electron-builder/out/platformPackager'>;
}
declare module 'electron-builder/out/publish/publisher.js' {
  declare module.exports: $Exports<'electron-builder/out/publish/publisher'>;
}
declare module 'electron-builder/out/publish/PublishManager.js' {
  declare module.exports: $Exports<'electron-builder/out/publish/PublishManager'>;
}
declare module 'electron-builder/out/readInstalled.js' {
  declare module.exports: $Exports<'electron-builder/out/readInstalled'>;
}
declare module 'electron-builder/out/repositoryInfo.js' {
  declare module.exports: $Exports<'electron-builder/out/repositoryInfo'>;
}
declare module 'electron-builder/out/targets/appImage.js' {
  declare module.exports: $Exports<'electron-builder/out/targets/appImage'>;
}
declare module 'electron-builder/out/targets/appx.js' {
  declare module.exports: $Exports<'electron-builder/out/targets/appx'>;
}
declare module 'electron-builder/out/targets/archive.js' {
  declare module.exports: $Exports<'electron-builder/out/targets/archive'>;
}
declare module 'electron-builder/out/targets/ArchiveTarget.js' {
  declare module.exports: $Exports<'electron-builder/out/targets/ArchiveTarget'>;
}
declare module 'electron-builder/out/targets/dmg.js' {
  declare module.exports: $Exports<'electron-builder/out/targets/dmg'>;
}
declare module 'electron-builder/out/targets/fpm.js' {
  declare module.exports: $Exports<'electron-builder/out/targets/fpm'>;
}
declare module 'electron-builder/out/targets/LinuxTargetHelper.js' {
  declare module.exports: $Exports<'electron-builder/out/targets/LinuxTargetHelper'>;
}
declare module 'electron-builder/out/targets/nsis.js' {
  declare module.exports: $Exports<'electron-builder/out/targets/nsis'>;
}
declare module 'electron-builder/out/targets/pkg.js' {
  declare module.exports: $Exports<'electron-builder/out/targets/pkg'>;
}
declare module 'electron-builder/out/targets/snap.js' {
  declare module.exports: $Exports<'electron-builder/out/targets/snap'>;
}
declare module 'electron-builder/out/targets/targetFactory.js' {
  declare module.exports: $Exports<'electron-builder/out/targets/targetFactory'>;
}
declare module 'electron-builder/out/util/filter.js' {
  declare module.exports: $Exports<'electron-builder/out/util/filter'>;
}
declare module 'electron-builder/out/util/readPackageJson.js' {
  declare module.exports: $Exports<'electron-builder/out/util/readPackageJson'>;
}
declare module 'electron-builder/out/windowsCodeSign.js' {
  declare module.exports: $Exports<'electron-builder/out/windowsCodeSign'>;
}
declare module 'electron-builder/out/winPackager.js' {
  declare module.exports: $Exports<'electron-builder/out/winPackager'>;
}
declare module 'electron-builder/out/yarn.js' {
  declare module.exports: $Exports<'electron-builder/out/yarn'>;
}
